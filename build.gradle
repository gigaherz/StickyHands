buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven {url='https://repo.spongepowered.org/repository/maven-public/'}
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'maven-publish'

version = '2.1.0'
group = 'dev.gigaherz.stickyhands' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "StickyHands-UNKNOWN"

project.afterEvaluate {
    archivesBaseName = "StickyHands-${project.MC_VERSION}"
}


java.toolchain.languageVersion = JavaLanguageVersion.of(17)

mixin {
    add sourceSets.main, "stickyhands.refmap.json"
}

minecraft {
    mappings channel: 'official', version: '1.19'

    //accessTransformer = file('dummy/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'

            arg "--mixin=stickyhands.mixins.json"

            ideaModule "${project.name}.main"

            mods {
                thismod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'

            ideaModule "${project.name}.main"

            mods {
                thismod {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19-41.0.110'
    annotationProcessor 'org.spongepowered:mixin:0.8.+:processor'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "stickyhands",
            "Specification-Vendor": "gigaherz",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"gigaherz",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "stickyhands.mixins.json"
        ])
    }
}

////////////////
// IntelliJ Project Import
// The Mixin annotation process does not have an obfuscation source when running through the IntelliJ compiler,
// thus we have to prevent it from being activated as part of importing this Gradle project into IntelliJ.
if (System.getProperty("idea.sync.active") == "true") {
    afterEvaluate {
        tasks.withType(JavaCompile).all {
            it.options.annotationProcessorPath = files()
        }
    }
}